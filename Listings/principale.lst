


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000         ;*******************************************************
                       *****************
    4 00000000                 THUMB
    5 00000000                 REQUIRE8
    6 00000000                 PRESERVE8
    7 00000000         ;*******************************************************
                       *****************
    8 00000000         
    9 00000000                 include          REG_UTILES.inc
    1 00000000         
    2 00000000         ;**************************************
    3 00000000         ;     Les adresess utiles  
    4 00000000         ;***************************************
    5 00000000         
    6 00000000         
    7 00000000         ;**************************************
    8 00000000         ;     Affectation des bits GPIO  
    9 00000000         ;***************************************
   10 00000000         ; GSLCK..... PA0 
   11 00000000         ; DSPRG..... PA1 
   12 00000000         ; BLANK..... PA2 
   13 00000000         ; XLAT...... PA3
   14 00000000         ; VPRG...... PA4
   15 00000000         ; SCLK...... PA5
   16 00000000         ; SIN1...... PA7
   17 00000000         ;Capteur.....PA8
   18 00000000         
   19 00000000         ;LED.........PB10
   20 00000000         ;****************************************/
   21 00000000         
   22 00000000         
   23 00000000         
   24 00000000 40010800 
                       GPIOBASEA
                               EQU              0X40010800
   25 00000000 40010C00 
                       GPIOBASEB
                               EQU              0X40010C00
   26 00000000         
   27 00000000 00000008 
                       OffsetInput
                               EQU              0x08
   28 00000000 0000000C 
                       OffsetOutput
                               EQU              0x0C
   29 00000000 00000010 
                       OffsetSet
                               EQU              0x10
   30 00000000 00000014 
                       OffsetReset
                               EQU              0x14
   31 00000000         
   32 00000000         
   33 00000000 00000080 
                       MaskSerial_In1
                               equ              0x80
   34 00000000 00000080 



ARM Macro Assembler    Page 2 


                       MaskSerial_Dots
                               equ              0x80
   35 00000000 00000010 
                       MaskVprg
                               equ              0x10
   36 00000000 00000008 
                       MaskXlat
                               equ              0x08
   37 00000000 00000004 
                       MaskBlank
                               equ              0x04
   38 00000000 00000020 
                       MaskSclk
                               equ              0x20
   39 00000000 00000002 
                       MaskDsprg
                               equ              0x02
   40 00000000 00000001 
                       MaskGsclk
                               equ              0x01
   41 00000000         
   42 00000000         
   43 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08
   44 00000000 40012C10 
                       TIM1_SR EQU              0x40012c10
   45 00000000 40012C24 
                       TIM1_CNT
                               EQU              0x40012c24
   46 00000000 4000082C 
                       TIM4_ARR
                               EQU              0x4000082C
   47 00000000 40000810 
                       TIM4_SR EQU              0x40000810
   48 00000000         
   49 00000000         
   50 00000000         
   51 00000000         
   52 00000000         
   53 00000000                 END
   10 00000000         
   11 00000000         
   12 00000000         ;*******************************************************
                       *****************
   13 00000000         ;      IMPORT/EXPORT Système
   14 00000000         ;*******************************************************
                       *****************
   15 00000000         
   16 00000000                 IMPORT           ||Lib$$Request$$armlib|| [CODE,
WEAK]
   17 00000000         
   18 00000000         
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         ; IMPORT/EXPORT de procédure           
   23 00000000         
   24 00000000                 IMPORT           Init_Cible



ARM Macro Assembler    Page 3 


   25 00000000                 IMPORT           Allume_LED
   26 00000000                 IMPORT           Eteint_LED
   27 00000000         
   28 00000000         
   29 00000000                 EXPORT           main
   30 00000000         
   31 00000000         ;*******************************************************
                       ************************
   32 00000000         
   33 00000000         
   34 00000000         ;*******************************************************
                       ************************
   35 00000000                 AREA             mesdonnees, data, readwrite
   36 00000000         
   37 00000000         
   38 00000000         
   39 00000000         
   40 00000000         ;*******************************************************
                       ************************
   41 00000000         
   42 00000000                 AREA             moncode, code, readonly
   43 00000000         
   44 00000000         
   45 00000000         
   46 00000000         ;*******************************************************
                       ************************
   47 00000000         ; Procédure principale et point d'entrée du projet
   48 00000000         ;*******************************************************
                       ************************
   49 00000000         main    PROC
   50 00000000         ;*******************************************************
                       ************************
   51 00000000         
   52 00000000         
   53 00000000         
   54 00000000         ;Algorithme Fronts montants
   55 00000000         ;  Old = Lire_Capteur()
   56 00000000         
   57 00000000         ;while(1)
   58 00000000         ;{
   59 00000000         ;Etat = Lire_Capteur()
   60 00000000         ;     if (etat=!old)
   61 00000000         ;          if(etat >0)
   62 00000000         ;                  si Ledeteinte
   63 00000000         ;            led_allumer
   64 00000000         ;     sinon 
   65 00000000         ;            led eteinte
   66 00000000         ;     end si
   67 00000000         ;   end if
   68 00000000         ;  end if
   69 00000000         ;   
   70 00000000         ;Old = Etat ; on mémorise l’ancien état pour le prochain
                        tour
   71 00000000         ;}
   72 00000000         
   73 00000000 F04F 0000       MOV              R0,#0
   74 00000004 F7FF FFFE       BL               Init_Cible  ;
   75 00000008         
   76 00000008 F8DF A044       LDR              R10,=(GPIOBASEA+OffsetInput) ;I



ARM Macro Assembler    Page 4 


                                                            nitialisation oldEt
                                                            at      r5= OldEtat
                                                            
   77 0000000C F8BA 5000       LDRH             R5, [R10]
   78 00000010         
   79 00000010 F8DF A03C 
                       Boucle  LDR              R10,=(GPIOBASEA+OffsetInput) ;l
                                                            ire capteur    R9=C
                                                            apteur
   80 00000014 F8BA 9000       LDRH             R9, [R10]
   81 00000018         
   82 00000018 45A9            CMP              R9,R5
   83 0000001A D012            BEQ              FIN         ; comparaison old v
                                                            s capteur    si auc
                                                            un changement on sa
                                                            ute a la fin
   84 0000001C         
   85 0000001C F44F 7380       MOV              R3, #(0x01<<8)
   86 00000020 EA05 0603       AND              R6,R5,R3    ;masquage pour récu
                                                            perer la valeur du 
                                                            bit du capteur     
                                                             R6= résulatat du m
                                                            asquage
   87 00000024 2E00            CMP              R6, #0      ; comparaison du bi
                                                            t de old a 0 => si 
                                                            old=0 alors on est 
                                                            sur un front montan
                                                            t
   88 00000026 D10C            BNE              FIN         ; si old=1 on est s
                                                            ur front decendant:
                                                             on ne fait rien
   89 00000028         
   90 00000028         
   91 00000028         ; on est dans le cas front montant
   92 00000028 4A0A            LDR              R2,=(GPIOBASEB+OffsetOutput) ; 
                                                            On verifie si la LE
                                                            D est allumée   
   93 0000002A 8814            LDRH             R4, [R2]
   94 0000002C F44F 6380       MOV              R3, #(0x01<<10)
   95 00000030 EA04 0603       AND              R6,R4,R3    ;masquage pour récu
                                                            perer la valeur du 
                                                            bit de la LED      
                                                            R6= résulatat du ma
                                                            squage
   96 00000034 2E00            CMP              R6, #0      ; comparaison du bi
                                                            t a 0 => si 0 alors
                                                             on led est à 0 -> 
                                                            on doit la mettre à
                                                             1    
   97 00000036 D002            BEQ              sinon
   98 00000038 F7FF FFFE       BL               Eteint_LED
   99 0000003C E001            B                FIN
  100 0000003E F7FF FFFE 
                       sinon   BL               Allume_LED
  101 00000042         
  102 00000042         
  103 00000042         
  104 00000042 F8DF A00C 
                       FIN     LDR              R10,=(GPIOBASEA+OffsetInput) ;A



ARM Macro Assembler    Page 5 


                                                            ctualisation oldEta
                                                            t      r5= OldEtat
  105 00000046 F8BA 5000       LDRH             R5, [R10]
  106 0000004A         
  107 0000004A E7E1            B                Boucle
  108 0000004C         
  109 0000004C         
  110 0000004C         
  111 0000004C         ;LDR R10,=(GPIOBASEB+OffsetOutput)             //Etape 1
                        : Alternatives pour allumer/eteindre
  112 0000004C         ;LDRH R9, [R10]
  113 0000004C         ;ORR R9,R5,R9
  114 0000004C         ;STRH R9,[R10]
  115 0000004C         
  116 0000004C         ;LDR R10,=(GPIOBASEB+OffsetOutput)
  117 0000004C         ;LDRH R9, [R10]
  118 0000004C         ;MVN R5,R5
  119 0000004C         ;AND R9,R9,R5
  120 0000004C         ;STRH R9,[R10]
  121 0000004C         
  122 0000004C         
  123 0000004C E7FE            B                .
  124 0000004E         
  125 0000004E         
  126 0000004E                 ENDP
  127 0000004E         
  128 0000004E                 END
              00 00 40010808 
              40010C0C 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\principale.d -o.\objects\principale.o -I.\RTE\Device\STM
32F103RB -I.\RTE\_Simul_ -IC:\Users\ewanm\AppData\Local\Arm\Packs\ARM\CMSIS\5.6
.0\CMSIS\Core\Include -IC:\Users\ewanm\AppData\Local\Arm\Packs\Keil\STM32F1xx_D
FP\2.3.0\Device\Include --predefine="__EVAL SETA 1" --predefine="__MICROLIB SET
A 1" --predefine="__UVISION_VERSION SETA 529" --predefine="_RTE_ SETA 1" --pred
efine="STM32F10X_MD SETA 1" --predefine="STM32F10X_MD SETA 1" --list=.\listings
\principale.lst Principale.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

mesdonnees 00000000

Symbol: mesdonnees
   Definitions
      At line 35 in file Principale.asm
   Uses
      None
Comment: mesdonnees unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Boucle 00000010

Symbol: Boucle
   Definitions
      At line 79 in file Principale.asm
   Uses
      At line 107 in file Principale.asm
Comment: Boucle used once
FIN 00000042

Symbol: FIN
   Definitions
      At line 104 in file Principale.asm
   Uses
      At line 83 in file Principale.asm
      At line 88 in file Principale.asm
      At line 99 in file Principale.asm

main 00000000

Symbol: main
   Definitions
      At line 49 in file Principale.asm
   Uses
      At line 29 in file Principale.asm
Comment: main used once
moncode 00000000

Symbol: moncode
   Definitions
      At line 42 in file Principale.asm
   Uses
      None
Comment: moncode unused
sinon 0000003E

Symbol: sinon
   Definitions
      At line 100 in file Principale.asm
   Uses
      At line 97 in file Principale.asm
Comment: sinon used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOBASEA 40010800

Symbol: GPIOBASEA
   Definitions
      At line 24 in file REG_UTILES.inc
   Uses
      At line 76 in file Principale.asm
      At line 79 in file Principale.asm
      At line 104 in file Principale.asm

GPIOBASEB 40010C00

Symbol: GPIOBASEB
   Definitions
      At line 25 in file REG_UTILES.inc
   Uses
      At line 92 in file Principale.asm
Comment: GPIOBASEB used once
MaskBlank 00000004

Symbol: MaskBlank
   Definitions
      At line 37 in file REG_UTILES.inc
   Uses
      None
Comment: MaskBlank unused
MaskDsprg 00000002

Symbol: MaskDsprg
   Definitions
      At line 39 in file REG_UTILES.inc
   Uses
      None
Comment: MaskDsprg unused
MaskGsclk 00000001

Symbol: MaskGsclk
   Definitions
      At line 40 in file REG_UTILES.inc
   Uses
      None
Comment: MaskGsclk unused
MaskSclk 00000020

Symbol: MaskSclk
   Definitions
      At line 38 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSclk unused
MaskSerial_Dots 00000080

Symbol: MaskSerial_Dots
   Definitions
      At line 34 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_Dots unused
MaskSerial_In1 00000080



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: MaskSerial_In1
   Definitions
      At line 33 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_In1 unused
MaskVprg 00000010

Symbol: MaskVprg
   Definitions
      At line 35 in file REG_UTILES.inc
   Uses
      None
Comment: MaskVprg unused
MaskXlat 00000008

Symbol: MaskXlat
   Definitions
      At line 36 in file REG_UTILES.inc
   Uses
      None
Comment: MaskXlat unused
OffsetInput 00000008

Symbol: OffsetInput
   Definitions
      At line 27 in file REG_UTILES.inc
   Uses
      At line 76 in file Principale.asm
      At line 79 in file Principale.asm
      At line 104 in file Principale.asm

OffsetOutput 0000000C

Symbol: OffsetOutput
   Definitions
      At line 28 in file REG_UTILES.inc
   Uses
      At line 92 in file Principale.asm
Comment: OffsetOutput used once
OffsetReset 00000014

Symbol: OffsetReset
   Definitions
      At line 30 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetReset unused
OffsetSet 00000010

Symbol: OffsetSet
   Definitions
      At line 29 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetSet unused
SCB_VTOR E000ED08




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: SCB_VTOR
   Definitions
      At line 43 in file REG_UTILES.inc
   Uses
      None
Comment: SCB_VTOR unused
TIM1_CNT 40012C24

Symbol: TIM1_CNT
   Definitions
      At line 45 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_CNT unused
TIM1_SR 40012C10

Symbol: TIM1_SR
   Definitions
      At line 44 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_SR unused
TIM4_ARR 4000082C

Symbol: TIM4_ARR
   Definitions
      At line 46 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_ARR unused
TIM4_SR 40000810

Symbol: TIM4_SR
   Definitions
      At line 47 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_SR unused
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Allume_LED 00000000

Symbol: Allume_LED
   Definitions
      At line 25 in file Principale.asm
   Uses
      At line 100 in file Principale.asm
Comment: Allume_LED used once
Eteint_LED 00000000

Symbol: Eteint_LED
   Definitions
      At line 26 in file Principale.asm
   Uses
      At line 98 in file Principale.asm
Comment: Eteint_LED used once
Init_Cible 00000000

Symbol: Init_Cible
   Definitions
      At line 24 in file Principale.asm
   Uses
      At line 74 in file Principale.asm
Comment: Init_Cible used once
|Lib$$Request$$armlib| 00000000

Symbol: |Lib$$Request$$armlib|
   Definitions
      At line 16 in file Principale.asm
   Uses
      None
Comment: |Lib$$Request$$armlib| unused
4 symbols
366 symbols in table
